{"version":3,"sources":["../src/request.js"],"names":["Request","message","messageType","messageId","commandName","commandPayload","JSON","parse","err","Error","CommandModel","command","getCommandName","commandValues","getCommandValues"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;IAGMA,O,WAAAA,O;;;;;;;gCACgBC,O,EAAS;AAC3B,UAAIC,oBAAJ;AAAA,UAAiBC,kBAAjB;AAAA,UAA4BC,oBAA5B;AAAA,UAAyCC,uBAAzC;AACA,UAAI;AAAA,0BACsDC,KAAKC,KAAL,CAAWN,OAAX,CADtD;;AAAA;;AACDC,mBADC;AACYC,iBADZ;AACuBC,mBADvB;AACoCC,sBADpC;AAEH,OAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,cAAM,IAAIC,KAAJ,gCAAuCR,OAAvC,WAAoDO,IAAIP,OAAxD,CAAN;AACD;AACD,UAAIC,uCAAJ,EAAkC;AAChC,cAAM,IAAIO,KAAJ,yBAAgCP,WAAhC,CAAN;AACD;AACD,UAAI,CAAC,mBAASE,WAAT,CAAL,EAA4B;AAC1B,cAAM,IAAIK,KAAJ,sBAA6BL,WAA7B,CAAN;AACD;AACD,UAAMM,eAAe,mBAASN,WAAT,CAArB;AACA,UAAMO,UAAU,IAAID,YAAJ,CAAiBL,cAAjB,CAAhB;;AAEA,aAAO,CAACF,SAAD,EAAYQ,OAAZ,CAAP;AACD;;;8BAEiBR,S,EAAWQ,O,EAAS;AACpC,UAAMP,cAAcO,QAAQC,cAAR,EAApB;AACA,UAAMC,gBAAgBF,QAAQG,gBAAR,EAAtB;;AAEA,aAAO,yBAAe,0BAAeX,SAAf,EAA0BC,WAA1B,EAAuCS,aAAvC,CAAf,CAAP;AACD","file":"request.js","sourcesContent":["import commands from './commands';\nimport { CALL_MESSAGE } from './constants';\n\nexport\nclass Request {\n  static fromMessage (message) {\n    let messageType, messageId, commandName, commandPayload;\n    try {\n      [messageType, messageId, commandName, commandPayload] = JSON.parse(message);\n    } catch (err) {\n      throw new Error(`Failed to parse message: \"${message}\", ${err.message}`);\n    }\n    if (messageType !== CALL_MESSAGE) {\n      throw new Error(`Wront reqeust type ${messageType}`);\n    }\n    if (!commands[commandName]) {\n      throw new Error(`Unknown command ${commandName}`);\n    }\n    const CommandModel = commands[commandName];\n    const command = new CommandModel(commandPayload);\n\n    return [messageId, command];\n  }\n\n  static toMessage (messageId, command) {\n    const commandName = command.getCommandName();\n    const commandValues = command.getCommandValues();\n\n    return JSON.stringify([CALL_MESSAGE, messageId, commandName, commandValues]);\n  }\n}\n"]}