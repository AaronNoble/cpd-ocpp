{"version":3,"sources":["../src/helpers.js"],"names":["applyPropertiesValidators","getObjectValues","MODEL_VALUES_SYMBOL","object","schema","values","fieldName","value","validate","Error","joiSchema","properties","key","hasOwnProperty","validator","reach","get","set","val","undefined","enumerable","configurable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAMSA,yB,GAAAA,yB;QAsCAC,e,GAAAA,e;;AA5CT;;;;AACA;;;;;;AAEA,IAAMC,sBAAsB,sBAAO,aAAP,CAA5B;;AAGA,SAASF,yBAAT,CAAoCG,MAApC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4D;AAAA;AAAA,wFA4B1D,iBAAyBC,SAAzB,EAAoCC,KAApC,EAA2CH,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEU,cAAII,QAAJ,CAAaD,KAAb,EAAoBH,MAApB,CAFV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,oBAIU,IAAIK,KAAJ,oBAA2BF,KAA3B,mBAA8CD,SAA9C,CAJV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA5B0D;;AAAA,oBA4B3CE,QA5B2C;AAAA;AAAA;AAAA;;AAC1D,MAAME,YAAY,oBAAUN,MAAV,CAAlB;;AAEAD,SAAOD,mBAAP,IAA8B,EAA9B;;AAEA,MAAMS,aAAa,EAAnB;;AAL0D,6BAMjDC,GANiD;AAOxD,QAAI,CAACR,OAAOO,UAAP,CAAkBE,cAAlB,CAAiCD,GAAjC,CAAL,EAA4C;AAC1C;AAAA;AAAA;AACD;AACD,QAAME,YAAY,cAAIC,KAAJ,CAAUL,SAAV,EAAqBE,GAArB,CAAlB;AACAJ,aAASI,GAAT,EAAcP,OAAOO,GAAP,CAAd,EAA2BE,SAA3B;AACAX,WAAOD,mBAAP,EAA4BU,GAA5B,IAAmCP,OAAOO,GAAP,CAAnC;;AAEAD,eAAWC,GAAX,IAAkB;AAChBI,WAAK;AAAA,eAAMb,OAAOD,mBAAP,EAA4BU,GAA5B,CAAN;AAAA,OADW;AAEhBK,WAAK,aAACC,GAAD,EAAS;AACZV,iBAASI,GAAT,EAAcM,GAAd,EAAmBJ,SAAnB;;AAECI,gBAAQC,SAAT,GAAuB,OAAOhB,OAAOD,mBAAP,EAA4BU,GAA5B,CAA9B,GAAmET,OAAOD,mBAAP,EAA4BU,GAA5B,IAAmCM,GAAtG;AACD,OANe;AAOhBE,kBAAY,IAPI;AAQhBC,oBAAc;AARE,KAAlB;AAdwD;;AAM1D,OAAK,IAAIT,GAAT,IAAgBR,OAAOO,UAAvB,EAAmC;AAAA,qBAA1BC,GAA0B;;AAAA;AAkBlC;;AAED,kCAAwBT,MAAxB,EAAgCQ,UAAhC;AASD;;AAGD,SAASV,eAAT,CAA0BE,MAA1B,EAAkC;AAChC,MAAME,oCAAeF,OAAOD,mBAAP,KAA+B,EAA9C,CAAN;;AAEA,OAAK,IAAIU,GAAT,IAAgBP,MAAhB,EAAwB;AACtB,QAAI,CAACA,OAAOQ,cAAP,CAAsBD,GAAtB,CAAL,EAAiC;AAC/B;AACD;AACD,QAAIP,OAAOO,GAAP,MAAgBO,SAApB,EAA+B;AAC7B,aAAOd,OAAOO,GAAP,CAAP;AACD;AACF;AACD,SAAOT,OAAOD,mBAAP,CAAP;AACD","file":"helpers.js","sourcesContent":["import Joi from 'joi';\nimport Enjoi from 'enjoi';\n\nconst MODEL_VALUES_SYMBOL = Symbol('modelValues');\n\nexport\nfunction applyPropertiesValidators (object, schema, values) {\n  const joiSchema = new Enjoi(schema);\n\n  object[MODEL_VALUES_SYMBOL] = {};\n\n  const properties = {};\n  for (let key in schema.properties) {\n    if (!schema.properties.hasOwnProperty(key)) {\n      return;\n    }\n    const validator = Joi.reach(joiSchema, key);\n    validate(key, values[key], validator);\n    object[MODEL_VALUES_SYMBOL][key] = values[key];\n\n    properties[key] = {\n      get: () => object[MODEL_VALUES_SYMBOL][key],\n      set: (val) => {\n        validate(key, val, validator);\n\n        (val === undefined) ? (delete object[MODEL_VALUES_SYMBOL][key]) : (object[MODEL_VALUES_SYMBOL][key] = val);\n      },\n      enumerable: true,\n      configurable: false\n    };\n  }\n\n  Object.defineProperties(object, properties);\n\n  async function validate (fieldName, value, schema) {\n    try {\n      await Joi.validate(value, schema);\n    } catch (err) {\n      throw new Error(`Invalid value ${value} for field ${fieldName}`);\n    }\n  }\n}\n\nexport\nfunction getObjectValues (object) {\n  const values = { ...(object[MODEL_VALUES_SYMBOL] || {}) };\n\n  for (let key in values) {\n    if (!values.hasOwnProperty(key)) {\n      return;\n    }\n    if (values[key] === undefined) {\n      delete values[key];\n    }\n  }\n  return object[MODEL_VALUES_SYMBOL];\n}\n"]}